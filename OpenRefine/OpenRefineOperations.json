[
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "MarketName",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column MarketName using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "MarketName",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column MarketName using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Website",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Website using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Facebook",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Facebook using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Twitter",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Twitter using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Youtube",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Youtube using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "OtherMedia",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column OtherMedia using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "street",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column street using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "County",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column County using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "County",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column County using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "State",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column State using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "State",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column State using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Location",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Location using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Location",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Location using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Location",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Location using expression value.trim()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Location",
    "expression": "value.toTitlecase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Location using expression value.toTitlecase()"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Credit",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Credit using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "WIC",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column WIC using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "WICcash",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column WICcash using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "SFMNP",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column SFMNP using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "SNAP",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column SNAP using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Organic",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Organic using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Bakedgoods",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Bakedgoods using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Cheese",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Cheese using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Crafts",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Crafts using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Flowers",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Flowers using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Eggs",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Eggs using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Seafood",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Seafood using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Herbs",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Herbs using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Vegetables",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Vegetables using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Honey",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Honey using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Jams",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Jams using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Maple",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Maple using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Meat",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Meat using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Nursery",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Nursery using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Nuts",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Nuts using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Plants",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Plants using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Poultry",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Poultry using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Prepared",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Prepared using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Soap",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Soap using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Trees",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Trees using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Wine",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Wine using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Coffee",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Coffee using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Beans",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Beans using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Fruits",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Fruits using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Grains",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Grains using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Juices",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Juices using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Mushrooms",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Mushrooms using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "PetFood",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column PetFood using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Tofu",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Tofu using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "WildHarvested",
    "expression": "grel:if(value==\"Y\",\"True\", \"False\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column WildHarvested using expression grel:if(value==\"Y\",\"True\", \"False\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Season1Date",
    "expression": "grel:value.replace(/%@#!\\\\\\[\\]\\(\\)\\?/,\"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column Season1Date using expression grel:value.replace(/%@#!\\\\\\[\\]\\(\\)\\?/,\"\")"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Season1Date",
    "guessCellType": true,
    "removeOriginalColumn": false,
    "mode": "separator",
    "separator": " to ",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column Season1Date by separator"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Season1Date 1",
    "newColumnName": "Season1FromDate",
    "description": "Rename column Season1Date 1 to Season1FromDate"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Season1Date 2",
    "newColumnName": "Season1ToDate",
    "description": "Rename column Season1Date 2 to Season1ToDate"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Season1Time",
    "guessCellType": true,
    "removeOriginalColumn": false,
    "mode": "separator",
    "separator": ": ",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column Season1Time by separator"
  },
  {
    "op": "core/column-removal",
    "columnName": "Season1Time 1",
    "description": "Remove column Season1Time 1"
  },
  {
    "op": "core/column-removal",
    "columnName": "Season1Time 2",
    "description": "Remove column Season1Time 2"
  },
  {
    "op": "core/column-removal",
    "columnName": "Season1Time 3",
    "description": "Remove column Season1Time 3"
  },
  {
    "op": "core/column-removal",
    "columnName": "Season1Time 4",
    "description": "Remove column Season1Time 4"
  },
  {
    "op": "core/column-removal",
    "columnName": "Season1Time 5",
    "description": "Remove column Season1Time 5"
  },
  {
    "op": "core/column-removal",
    "columnName": "Season1Time 6",
    "description": "Remove column Season1Time 6"
  },
  {
    "op": "core/column-removal",
    "columnName": "Season1Time 7",
    "description": "Remove column Season1Time 7"
  },
  {
    "op": "core/column-removal",
    "columnName": "Season1Time 8",
    "description": "Remove column Season1Time 8"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Season1Time",
    "guessCellType": true,
    "removeOriginalColumn": false,
    "mode": "separator",
    "separator": ";",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column Season1Time by separator"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Season2Date",
    "guessCellType": true,
    "removeOriginalColumn": false,
    "mode": "separator",
    "separator": " to ",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column Season2Date by separator"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Season2Date 1",
    "newColumnName": "Season2FromDate",
    "description": "Rename column Season2Date 1 to Season2FromDate"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Season2Date 2",
    "newColumnName": "Season2ToDate",
    "description": "Rename column Season2Date 2 to Season2ToDate"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Season3Date",
    "guessCellType": true,
    "removeOriginalColumn": true,
    "mode": "separator",
    "separator": " to ",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column Season3Date by separator"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Season3Date 1",
    "newColumnName": "Season3FromDate",
    "description": "Rename column Season3Date 1 to Season3FromDate"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Season3Date 2",
    "newColumnName": "Season3ToDate",
    "description": "Rename column Season3Date 2 to Season3ToDate"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Season4Date",
    "guessCellType": true,
    "removeOriginalColumn": false,
    "mode": "separator",
    "separator": " to ",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column Season4Date by separator"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Season4Date 1",
    "newColumnName": "Season4FromDate",
    "description": "Rename column Season4Date 1 to Season4FromDate"
  },
  {
    "op": "core/column-rename",
    "oldColumnName": "Season4Date 2",
    "newColumnName": "Season4ToDate",
    "description": "Rename column Season4Date 2 to Season4ToDate"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Season2Time",
    "guessCellType": true,
    "removeOriginalColumn": false,
    "mode": "separator",
    "separator": ";",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column Season2Time by separator"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Season3Time",
    "guessCellType": true,
    "removeOriginalColumn": false,
    "mode": "separator",
    "separator": ";",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column Season3Time by separator"
  },
  {
    "op": "core/column-split",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "Season4Time",
    "guessCellType": true,
    "removeOriginalColumn": false,
    "mode": "separator",
    "separator": ";",
    "regex": false,
    "maxColumns": 0,
    "description": "Split column Season4Time by separator"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "x",
    "expression": "grel:round(value.toNumber()*10000)/10000.",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column x using expression grel:round(value.toNumber()*10000)/10000."
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "y",
    "expression": "grel:round(value.toNumber()*10000)/10000.",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column y using expression grel:round(value.toNumber()*10000)/10000."
  }
]